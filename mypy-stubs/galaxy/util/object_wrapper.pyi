from _typeshed import Incomplete

NoneType: Incomplete
NotImplementedType: Incomplete
EllipsisType: Incomplete
XRangeType = range
SliceType = slice
BufferType = SliceType
DictProxyType = SliceType
log: Incomplete
__CALLABLE_TYPES__: Incomplete
__WRAP_NO_SUBCLASS__: Incomplete
__DONT_SANITIZE_TYPES__: Incomplete
__WRAP_SEQUENCES__: Incomplete
__WRAP_SETS__: Incomplete
__WRAP_MAPPINGS__: Incomplete
VALID_CHARACTERS: Incomplete
CHARACTER_MAP: Incomplete
INVALID_CHARACTER: str

def coerce(x, y): ...
def cmp(x, y): ...
def sanitize_lists_to_string(
    values, valid_characters=..., character_map=..., invalid_character=...
): ...
def wrap_with_safe_string(value, no_wrap_classes: Incomplete | None = ...): ...

class SafeStringWrapper:
    __UNSANITIZED_ATTRIBUTE_NAME__: str
    __NO_WRAP_NAMES__: Incomplete
    def __new__(cls, *arg, **kwd): ...
    unsanitized: Incomplete
    __safe_string_wrapper_function__: Incomplete
    def __init__(self, value, safe_string_wrapper_function=...) -> None: ...
    def __lt__(self, other): ...
    def __le__(self, other): ...
    def __eq__(self, other): ...
    def __ne__(self, other): ...
    def __gt__(self, other): ...
    def __ge__(self, other): ...
    def __cmp__(self, other): ...
    def __hash__(self): ...
    def __bool__(self): ...
    __nonzero__: Incomplete
    def __getattr__(self, name): ...
    def __setattr__(self, name, value): ...
    def __delattr__(self, name): ...
    def __getattribute__(self, name): ...
    def __len__(self): ...
    def __getitem__(self, key): ...
    def __setitem__(self, key, value) -> None: ...
    def __delitem__(self, key) -> None: ...
    def __iter__(self): ...
    def __contains__(self, item): ...
    def __getslice__(self, i, j): ...
    def __setslice__(self, i, j, value) -> None: ...
    def __delslice__(self, i, j) -> None: ...
    def __add__(self, other): ...
    def __sub__(self, other): ...
    def __mul__(self, other): ...
    def __floordiv__(self, other): ...
    def __mod__(self, other): ...
    def __divmod__(self, other): ...
    def __pow__(self, *other): ...
    def __lshift__(self, other): ...
    def __rshift__(self, other): ...
    def __and__(self, other): ...
    def __xor__(self, other): ...
    def __or__(self, other): ...
    def __div__(self, other): ...
    def __truediv__(self, other): ...
    def __rpow__(self, other): ...
    def __neg__(self): ...
    def __pos__(self): ...
    def __abs__(self): ...
    def __invert__(self): ...
    def __complex__(self): ...
    def __int__(self): ...
    def __float__(self): ...
    def __oct__(self): ...
    def __hex__(self): ...
    def __index__(self): ...
    def __coerce__(self, other): ...
    def __enter__(self): ...
    def __exit__(self, *args): ...

class CallableSafeStringWrapper(SafeStringWrapper):
    def __call__(self, *args, **kwds): ...

def pickle_SafeStringWrapper(safe_object): ...
