import threading

from _typeshed import Incomplete

def get_current_thread_object_dict(): ...

class Heartbeat(threading.Thread):
    config: Incomplete
    should_stop: bool
    period: Incomplete
    fname: Incomplete
    file: Incomplete
    fname_nonsleeping: Incomplete
    file_nonsleeping: Incomplete
    pid: Incomplete
    nonsleeping_heartbeats: Incomplete
    wait_event: Incomplete
    def __init__(
        self, config, name: str = ..., period: int = ..., fname: str = ...
    ) -> None: ...
    def run(self) -> None: ...
    def open_logs(self) -> None: ...
    def close_logs(self) -> None: ...
    def dump(self) -> None: ...
    def shutdown(self) -> None: ...
    def thread_is_sleeping(self, last_stack_frame): ...
    def get_interesting_stack_frame(self, stack_frames): ...
    def print_nonsleeping(self, threads_object_dict) -> None: ...
    def dump_signal_handler(self, signum, frame) -> None: ...
