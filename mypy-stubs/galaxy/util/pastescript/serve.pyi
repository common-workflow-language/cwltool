import optparse
from .loadwsgi import loadapp as loadapp, loadserver as loadserver
from _typeshed import Incomplete
from typing import Optional

difflib: Incomplete

class BoolOptionParser(optparse.OptionParser): ...

class BadCommand(Exception):
    message: Incomplete
    exit_code: Incomplete
    def __init__(self, message, exit_code: int = ...) -> None: ...

class NoDefault: ...

class Command:
    command_name: Incomplete
    def __init__(self, name) -> None: ...
    max_args: Incomplete
    max_args_error: str
    min_args: Optional[int]
    min_args_error: str
    required_args: Incomplete
    takes_config_file: Optional[int]
    group_name: str
    description: Optional[str]
    usage: str
    hidden: bool
    default_verbosity: int
    default_interactive: int
    return_code: int
    BadCommand: Incomplete
    interactive: Incomplete
    verbose: Incomplete
    simulate: Incomplete
    def run(self, args): ...
    def parse_args(self, args) -> None: ...
    def pad(self, s, length, dir: str = ...): ...
    standard_parser: Incomplete
    def quote_first_command_arg(self, arg): ...
    def parse_vars(self, args): ...
    def logging_file_config(self, config_file) -> None: ...

class NotFoundCommand(Command):
    def run(self, args): ...

MAXFD: int
jython: Incomplete

class DaemonizeException(Exception): ...

class ServeCommand(Command):
    min_args: int
    usage: str
    takes_config_file: int
    summary: str
    description: Optional[str]
    requires_config_file: bool
    parser: Incomplete
    default_verbosity: int
    possible_subcommands: Incomplete
    def command(self): ...
    def daemonize(self) -> None: ...
    def record_pid(self, pid_file) -> None: ...
    def stop_daemon(self): ...
    def show_status(self): ...
    def restart_with_reloader(self) -> None: ...
    def restart_with_monitor(self, reloader: bool = ...): ...
    def change_user_group(self, user, group) -> None: ...

class LazyWriter:
    filename: Incomplete
    fileobj: Incomplete
    lock: Incomplete
    mode: Incomplete
    def __init__(self, filename, mode: str = ...) -> None: ...
    def open(self): ...
    def write(self, text) -> None: ...
    def writelines(self, text) -> None: ...
    def flush(self) -> None: ...

def live_pidfile(pidfile): ...
def read_pidfile(filename): ...
def ensure_port_cleanup(
    bound_addresses, maxtries: int = ..., sleeptime: int = ...
) -> None: ...

python_version: Incomplete
parser: Incomplete
commands: Incomplete

def run(args: Incomplete | None = ...) -> None: ...
def invoke(command, command_name, options, args) -> None: ...
