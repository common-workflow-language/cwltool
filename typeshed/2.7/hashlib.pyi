# Stubs for hashlib (Python 2)

from typing import Tuple, Union

_DataType = Union[str, unicode, bytearray, buffer, memoryview]

class _Hash(object):  # This is not actually in the module namespace.
    name: str
    block_size = 0
    digest_size = 0
    digestsize = 0
    def __init__(self, arg: _DataType = ...) -> None: ...
    def update(self, arg: _DataType) -> None: ...
    def digest(self) -> str: ...
    def hexdigest(self) -> str: ...
    def copy(self) -> _Hash: ...

def new(name: str, data: str = ...) -> _Hash: ...

def md5(s: _DataType = ...) -> _Hash: ...
def sha1(s: _DataType = ...) -> _Hash: ...
def sha224(s: _DataType = ...) -> _Hash: ...
def sha256(s: _DataType = ...) -> _Hash: ...
def sha384(s: _DataType = ...) -> _Hash: ...
def sha512(s: _DataType = ...) -> _Hash: ...

algorithms: Tuple[str, ...]
algorithms_guaranteed: Tuple[str, ...]
algorithms_available: Tuple[str, ...]

def pbkdf2_hmac(name: str, password: str, salt: str, rounds: int, dklen: int = ...) -> str: ...
