# Stubs for galaxy.tools.parser.interface (Python 3.4)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional

NOT_IMPLEMENTED_MESSAGE = ...  # type: str

class ToolSource:
    default_is_multi_byte = ...  # type: bool
    def parse_id(self): ...
    def parse_version(self): ...
    def parse_tool_module(self): ...
    def parse_action_module(self): ...
    def parse_tool_type(self): ...
    def parse_name(self): ...
    def parse_description(self): ...
    def parse_is_multi_byte(self): ...
    def parse_display_interface(self, default): ...
    def parse_require_login(self, default): ...
    def parse_request_param_translation_elem(self): ...
    def parse_command(self): ...
    def parse_environment_variables(self): ...
    def parse_interpreter(self): ...
    def parse_redirect_url_params_elem(self): ...
    def parse_version_command(self): ...
    def parse_version_command_interpreter(self): ...
    def parse_parallelism(self): ...
    def parse_hidden(self): ...
    def parse_sanitize(self): ...
    def parse_refresh(self): ...
    def parse_requirements_and_containers(self): ...
    def parse_input_pages(self): ...
    def parse_outputs(self, tool): ...
    def parse_strict_shell(self): ...
    def parse_stdio(self): ...
    def parse_help(self): ...
    def parse_profile(self): ...
    def parse_tests_to_dict(self): ...

class PagesSource:
    page_sources = ...  # type: Any
    def __init__(self, page_sources) -> None: ...
    @property
    def inputs_defined(self): ...

class PageSource:
    def parse_display(self): ...
    def parse_input_sources(self): ...

class InputSource:
    default_optional = ...  # type: bool
    def elem(self): ...
    def get(self, key, value: Optional[Any] = ...): ...
    def get_bool(self, key, default): ...
    def parse_label(self): ...
    def parse_help(self): ...
    def parse_sanitizer_elem(self): ...
    def parse_validator_elems(self): ...
    def parse_optional(self, default: Optional[Any] = ...): ...
    def parse_dynamic_options_elem(self): ...
    def parse_static_options(self): ...
    def parse_conversion_tuples(self): ...
    def parse_nested_inputs_source(self): ...
    def parse_test_input_source(self): ...
    def parse_when_input_sources(self): ...

class ToolStdioRegex:
    match = ...  # type: str
    stdout_match = ...  # type: bool
    stderr_match = ...  # type: bool
    error_level = ...  # type: str
    desc = ...  # type: str
    def __init__(self) -> None: ...

class ToolStdioExitCode:
    range_start = ...  # type: Any
    range_end = ...  # type: Any
    error_level = ...  # type: str
    desc = ...  # type: str
    def __init__(self) -> None: ...

class TestCollectionDef:
    elements = ...  # type: Any
    collection_type = ...  # type: Any
    name = ...  # type: Any
    def __init__(self, elem, parse_param_elem) -> None: ...
    def collect_inputs(self): ...

class TestCollectionOutputDef:
    name = ...  # type: Any
    collection_type = ...  # type: Any
    count = ...  # type: Any
    attrib = ...  # type: Any
    element_tests = ...  # type: Any
    def __init__(self, name, attrib, element_tests) -> None: ...
