# Stubs for galaxy.util.inflection (Python 3.4)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any

class Base:
    def cond_plural(self, number_of_records, word): ...
    def titleize(self, word, uppercase: str = ...): ...
    def camelize(self, word): ...
    def underscore(self, word): ...
    def humanize(self, word, uppercase: str = ...): ...
    def variablize(self, word): ...
    def tableize(self, class_name): ...
    def classify(self, table_name): ...
    def ordinalize(self, number): ...
    def unaccent(self, text): ...
    def string_replace(self, word, find, replace): ...
    def urlize(self, text): ...
    def demodulize(self, module_name): ...
    def modulize(self, module_description): ...
    def foreignKey(self, class_name, separate_class_name_and_id_with_underscore: int = ...): ...

class English(Base):
    def pluralize(self, word): ...
    def singularize(self, word): ...

class Inflector:
    Inflector = ...  # type: Any
    def __init__(self, Inflector: Any = ...) -> None: ...
    def pluralize(self, word): ...
    def singularize(self, word): ...
    def cond_plural(self, number_of_records, word): ...
    def titleize(self, word, uppercase: str = ...): ...
    def camelize(self, word): ...
    def underscore(self, word): ...
    def humanize(self, word, uppercase: str = ...): ...
    def variablize(self, word): ...
    def tableize(self, class_name): ...
    def classify(self, table_name): ...
    def ordinalize(self, number): ...
    def unaccent(self, text): ...
    def urlize(self, text): ...
    def demodulize(self, module_name): ...
    def modulize(self, module_description): ...
    def foreignKey(self, class_name, separate_class_name_and_id_with_underscore: int = ...): ...
