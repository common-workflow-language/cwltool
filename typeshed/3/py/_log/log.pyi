from typing import Any, Optional

class Message:
    keywords: Any = ...
    args: Any = ...
    def __init__(self, keywords: Any, args: Any) -> None: ...
    def content(self): ...
    def prefix(self): ...

class Producer:
    Message: Any = ...
    keywords2consumer: Any = ...
    def __init__(self, keywords: Any, keywordmapper: Optional[Any] = ..., **kw: Any) -> None: ...
    def __getattr__(self, name: Any): ...
    def __call__(self, *args: Any) -> None: ...

class KeywordMapper:
    keywords2consumer: Any = ...
    def __init__(self) -> None: ...
    def getstate(self): ...
    def setstate(self, state: Any) -> None: ...
    def getconsumer(self, keywords: Any): ...
    def setconsumer(self, keywords: Any, consumer: Any) -> None: ...

def default_consumer(msg: Any) -> None: ...

default_keywordmapper: Any

def setconsumer(keywords: Any, consumer: Any) -> None: ...
def setstate(state: Any) -> None: ...
def getstate(): ...

class File:
    def __init__(self, f: Any) -> None: ...
    def __call__(self, msg: Any) -> None: ...

class Path:
    def __init__(self, filename: Any, append: bool = ..., delayed_create: bool = ..., buffering: bool = ...) -> None: ...
    def __call__(self, msg: Any) -> None: ...

def STDOUT(msg: Any) -> None: ...
def STDERR(msg: Any) -> None: ...

class Syslog:
    priority: Any = ...
    def __init__(self, priority: Optional[Any] = ...) -> None: ...
    def __call__(self, msg: Any) -> None: ...
