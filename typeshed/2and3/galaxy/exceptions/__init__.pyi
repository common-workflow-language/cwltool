# Stubs for galaxy.exceptions (Python 3.4)
#
# NOTE: This dynamically typed stub was automatically generated by stubgen.

from typing import Any, Optional
from ..exceptions import error_codes as error_codes

class MessageException(Exception):
    status_code = ...  # type: int
    err_code = ...  # type: Any
    err_msg = ...  # type: Any
    type = ...  # type: Any
    extra_error_info = ...  # type: Any
    def __init__(self, err_msg: Optional[Any] = ..., type: str = ..., **extra_error_info) -> None: ...

class ItemDeletionException(MessageException): ...
class ObjectInvalid(Exception): ...

class ActionInputError(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any
    def __init__(self, err_msg, type: str = ...) -> None: ...

class DuplicatedSlugException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class DuplicatedIdentifierException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class ObjectAttributeInvalidException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class ObjectAttributeMissingException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class MalformedId(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class MalformedContents(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class UnknownContentsType(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class RequestParameterMissingException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class ToolMetaParameterException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class ToolMissingException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class RequestParameterInvalidException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class AuthenticationFailed(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class AuthenticationRequired(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class ItemAccessibilityException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class ItemOwnershipException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class ConfigDoesNotAllowException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class InsufficientPermissionsException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class AdminRequiredException(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class ObjectNotFound(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class DeprecatedMethod(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class Conflict(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class ConfigurationError(Exception):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class InconsistentDatabase(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class InternalServerError(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class NotImplemented(MessageException):
    status_code = ...  # type: int
    err_code = ...  # type: Any

class ContainerCLIError(Exception):
    stdout = ...  # type: Any
    stderr = ...  # type: Any
    returncode = ...  # type: Any
    command = ...  # type: Any
    subprocess_command = ...  # type: Any
    def __init__(self, msg: Optional[Any] = ..., stdout: Optional[Any] = ..., stderr: Optional[Any] = ..., returncode: Optional[Any] = ..., command: Optional[Any] = ..., subprocess_command: Optional[Any] = ..., **kwargs) -> None: ...

class ContainerNotFound(Exception):
    container_id = ...  # type: Any
    def __init__(self, msg: Optional[Any] = ..., container_id: Optional[Any] = ..., **kwargs) -> None: ...

class ContainerImageNotFound(Exception):
    image = ...  # type: Any
    def __init__(self, msg: Optional[Any] = ..., image: Optional[Any] = ..., **kwargs) -> None: ...

class ContainerRunError(Exception):
    image = ...  # type: Any
    command = ...  # type: Any
    def __init__(self, msg: Optional[Any] = ..., image: Optional[Any] = ..., command: Optional[Any] = ..., **kwargs) -> None: ...
